'use client';

import { UserRole } from '@/types/types';
import { useState } from 'react';

interface RoleSelectionProps {
  onRoleSelect: (role: UserRole) => void;
  isLoading?: boolean;
}

export function RoleSelection({ onRoleSelect, isLoading = false }: RoleSelectionProps) {
  const [selectedRole, setSelectedRole] = useState<UserRole | null>(null);

  const handleRoleSelect = (role: UserRole) => {
    setSelectedRole(role);
    onRoleSelect(role);
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-primary-500 to-secondary-600 px-4">
      <div className="w-full max-w-md">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <div className="w-20 h-20 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-3xl">üëã</span>
          </div>
          <h1 className="text-3xl font-bold text-white mb-2">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
          <p className="text-white/80 text-lg">–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ</p>
        </div>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∏ —Ä–æ–ª–µ–π */}
        <div className="space-y-4">
          {/* –ó–∞–∫–∞–∑—á–∏–∫ */}
          <button
            onClick={() => handleRoleSelect('CUSTOMER')}
            disabled={isLoading}
            className={`w-full p-6 rounded-2xl border-2 transition-all duration-300 transform hover:scale-105 ${
              selectedRole === 'CUSTOMER'
                ? 'border-white bg-white/20 text-white'
                : 'border-white/30 bg-white/10 text-white hover:border-white/50 hover:bg-white/15'
            } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}
          >
            <div className="flex items-center space-x-4">
              <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center">
                <span className="text-2xl">üõí</span>
              </div>
              <div className="text-left">
                <h3 className="text-xl font-semibold mb-1">–ó–∞–∫–∞–∑—á–∏–∫</h3>
                <p className="text-white/70 text-sm">
                  –ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —É—Å–ª—É–≥–∏ —É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
                </p>
              </div>
            </div>
          </button>

          {/* –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å */}
          <button
            onClick={() => handleRoleSelect('SPECIALIST')}
            disabled={isLoading}
            className={`w-full p-6 rounded-2xl border-2 transition-all duration-300 transform hover:scale-105 ${
              selectedRole === 'SPECIALIST'
                ? 'border-white bg-white/20 text-white'
                : 'border-white/30 bg-white/10 text-white hover:border-white/50 hover:bg-white/15'
            } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}
          >
            <div className="flex items-center space-x-4">
              <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center">
                <span className="text-2xl">üõ†Ô∏è</span>
              </div>
              <div className="text-left">
                <h3 className="text-xl font-semibold mb-1">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</h3>
                <p className="text-white/70 text-sm">
                  –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —É—Å–ª—É–≥–∏ –∫–ª–∏–µ–Ω—Ç–∞–º
                </p>
              </div>
            </div>
          </button>
        </div>

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {isLoading && (
          <div className="mt-8 text-center">
            <div className="w-8 h-8 border-2 border-white border-t-transparent rounded-full animate-spin mx-auto mb-2"></div>
            <p className="text-white/80 text-sm">–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞...</p>
          </div>
        )}

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-8 text-center">
          <p className="text-white/60 text-sm">
            –í—ã —Å–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è
          </p>
        </div>
      </div>
    </div>
  );
}
