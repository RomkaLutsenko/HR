'use client';

import { Service, Specialist } from '@/types/types';
import { useState } from 'react';

interface PurchasedItem {
  id: number;
  service: Service;
  specialist?: Specialist;
  orderDate: string;
  totalPrice: number;
  status: 'completed' | 'cancelled';
  hasReview: boolean;
}

export default function Purchased() {
  const [selectedItem, setSelectedItem] = useState<PurchasedItem | null>(null);
  const [showReviewModal, setShowReviewModal] = useState(false);
  const [rating, setRating] = useState(5);
  const [comment, setComment] = useState('');

  // Mock data for past purchases
  const purchasedItems: PurchasedItem[] = [
    {
      id: 1,
      service: {
        id: 1,
        name: '–ë–∏–∑–Ω–µ—Å-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –±–∏–∑–Ω–µ—Å–∞',
        price: 5000,
        duration: 120,
        category: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏',
        specialists: [],
        rating: 4.8,
        reviewCount: 127,
        isPopular: true,
        image: 'üíº'
      },
      specialist: {
        id: 1,
        name: '–ï–ª–µ–Ω–∞ –í–æ—Ä–æ–±—å–µ–≤–∞',
        avatar: 'üë©‚Äçüíº',
        rating: 4.9,
        reviewCount: 203,
        experience: '15 –ª–µ—Ç',
        description: '–û–ø—ã—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
        categories: ['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏'],
        hourlyRate: 2500,
        isAvailable: true
      },
      orderDate: '2025-01-15',
      totalPrice: 5000,
      status: 'completed',
      hasReview: false
    },
    {
      id: 2,
      service: {
        id: 2,
        name: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
        description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ø—Ä–∞–≤–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º',
        price: 3000,
        duration: 60,
        category: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏',
        specialists: [],
        rating: 4.7,
        reviewCount: 89,
        isPopular: false,
        image: '‚öñÔ∏è'
      },
      orderDate: '2025-01-10',
      totalPrice: 3000,
      status: 'completed',
      hasReview: true
    }
  ];

  const handleReview = (item: PurchasedItem) => {
    setSelectedItem(item);
    setShowReviewModal(true);
  };

  const submitReview = () => {
    if (!selectedItem) return;
    
    // Here you would typically send the review to your API
    console.log('Submitting review:', {
      serviceId: selectedItem.service.id,
      specialistId: selectedItem.specialist?.id,
      rating,
      comment
    });
    
    setShowReviewModal(false);
    setRating(5);
    setComment('');
    setSelectedItem(null);
  };

  const vibrate = () => {
    if (navigator.vibrate) {
      navigator.vibrate(50);
    }
  };

  return (
    <div className="px-6 pb-24">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center space-x-3 mb-6">
        <div className="w-10 h-10 bg-gradient-to-br from-accent-500 to-accent-600 rounded-xl flex items-center justify-center shadow-glow">
          <span className="text-white text-lg">üì¶</span>
        </div>
        <div>
          <h2 className="text-2xl font-bold text-neutral-800">–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏</h2>
          <p className="text-sm text-neutral-600">{purchasedItems.length} –∑–∞–∫–∞–∑–æ–≤</p>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ */}
      <div className="space-y-4">
        {purchasedItems.map((item, index) => (
          <div
            key={item.id}
            className="glass rounded-2xl p-5 border border-white/20 shadow-soft hover:shadow-medium transition-all duration-300"
            style={{ animationDelay: `${index * 0.1}s` }}
          >
            <div className="flex items-start space-x-4">
              <div className="flex-1 min-w-0">
                <div className="flex items-center justify-between mb-2">
                  <h3 className="text-lg font-semibold text-neutral-800">{item.service.name}</h3>
                  <span className={`px-3 py-1 rounded-full text-xs font-medium ${
                    item.status === 'completed' 
                      ? 'bg-green-100 text-green-700' 
                      : 'bg-red-100 text-red-700'
                  }`}>
                    {item.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω' : '–û—Ç–º–µ–Ω–µ–Ω'}
                  </span>
                </div>
                
                <p className="text-sm text-neutral-600 mb-3">{item.service.description}</p>
                
                <div className="flex items-center justify-between mb-3">
                  <div className="flex flex-col items-center space-y-1">
                    <div className="flex items-center space-x-1">
                      <span className="text-yellow-500">‚≠ê</span>
                      <span className="text-sm text-neutral-600 font-medium">{item.service.rating}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <span className="text-neutral-400">üìù</span>
                      <span className="text-sm text-neutral-600">{item.service.reviewCount}</span>
                    </div>
                  </div>
                  <div className="flex items-center space-x-1">
                    <span className="text-neutral-400">‚è±Ô∏è</span>
                    <span className="text-sm text-neutral-600">{Math.floor(item.service.duration / 60)}—á</span>
                  </div>
                  <div>
                    <span className="text-primary-600 font-bold text-lg">{item.totalPrice} ‚ÇΩ</span>
                  </div>
                </div>

                {item.specialist && (
                  <div className="bg-gradient-to-r from-primary-50 to-secondary-50 rounded-xl p-3 mb-3 border border-primary-100">
                    <div className="flex items-center space-x-2">
                      <div className="w-6 h-6 bg-gradient-to-br from-primary-500 to-primary-600 rounded-lg flex items-center justify-center">
                        <span className="text-white text-xs font-semibold">{item.specialist.name.charAt(0)}</span>
                      </div>
                      <span className="text-sm font-semibold text-primary-800">
                        {item.specialist.name} ‚Ä¢ {item.specialist.hourlyRate} ‚ÇΩ/—á–∞—Å
                      </span>
                    </div>
                  </div>
                )}

                <div className="flex items-center justify-between">
                  <div className="text-sm text-neutral-500">
                    –ó–∞–∫–∞–∑ –æ—Ç {new Date(item.orderDate).toLocaleDateString('ru-RU')}
                  </div>
                  {item.status === 'completed' && !item.hasReview && (
                    <button
                      onClick={() => {
                        handleReview(item);
                        vibrate();
                      }}
                      className="bg-gradient-to-r from-primary-500 to-secondary-600 hover:from-primary-600 hover:to-secondary-700 text-white px-4 py-2 rounded-xl font-medium transition-all duration-300 shadow-soft hover:shadow-medium hover-lift"
                    >
                      –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                    </button>
                  )}
                  {item.hasReview && (
                    <span className="text-green-600 text-sm font-medium">‚úì –û—Ç–∑—ã–≤ –æ—Å—Ç–∞–≤–ª–µ–Ω</span>
                  )}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∑—ã–≤–∞ */}
      {showReviewModal && selectedItem && (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center px-4">
          <div className="glass rounded-3xl shadow-large max-w-sm w-full p-6 border border-white/20">
            <div className="text-center mb-6">
              <h3 className="text-xl font-bold text-neutral-800 mb-2">–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</h3>
              <p className="text-neutral-600">{selectedItem.service.name}</p>
            </div>

            {/* –†–µ–π—Ç–∏–Ω–≥ */}
            <div className="mb-6">
              <label className="block text-sm font-medium text-neutral-700 mb-3">–û—Ü–µ–Ω–∫–∞:</label>
              <div className="flex justify-center space-x-2">
                {[1, 2, 3, 4, 5].map((star) => (
                  <button
                    key={star}
                    onClick={() => setRating(star)}
                    className={`text-2xl transition-colors ${
                      star <= rating ? 'text-yellow-500' : 'text-neutral-300'
                    }`}
                  >
                    ‚≠ê
                  </button>
                ))}
              </div>
            </div>

            {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
            <div className="mb-6">
              <label className="block text-sm font-medium text-neutral-700 mb-2">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
              <textarea
                value={comment}
                onChange={(e) => setComment(e.target.value)}
                className="w-full p-3 border border-neutral-200 rounded-xl text-sm resize-none bg-white/50 backdrop-blur-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all"
                rows={4}
                placeholder="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏..."
              />
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ */}
            <div className="flex space-x-3">
              <button
                onClick={() => {
                  setShowReviewModal(false);
                  setRating(5);
                  setComment('');
                  setSelectedItem(null);
                }}
                className="flex-1 bg-neutral-100 hover:bg-neutral-200 text-neutral-700 py-3 rounded-xl font-medium transition-all duration-300"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                onClick={submitReview}
                className="flex-1 bg-gradient-to-r from-primary-500 to-secondary-600 hover:from-primary-600 hover:to-secondary-700 text-white py-3 rounded-xl font-semibold transition-all duration-300 shadow-soft hover:shadow-medium"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
