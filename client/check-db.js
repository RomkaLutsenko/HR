const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkData() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ...\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await prisma.serviceCategory.findMany();
    console.log(`üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥: ${categories.length}`);
    categories.forEach(cat => {
      console.log(`  - ${cat.name} (${cat.icon})`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏
    const services = await prisma.service.findMany();
    console.log(`\nüî• –í—Å–µ–≥–æ —É—Å–ª—É–≥: ${services.length}`);
    
    const popularServices = await prisma.service.findMany({
      where: { isPopular: true }
    });
    console.log(`üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã—Ö —É—Å–ª—É–≥: ${popularServices.length}`);
    
    popularServices.forEach(service => {
      console.log(`  - ${service.name} (${service.price} ‚ÇΩ)`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
    const specialists = await prisma.specialist.findMany();
    console.log(`\nüë• –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤: ${specialists.length}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkData();
